---
title: "BEE 6940: Climate Risk Analysis"
author: "Cornell University"
date: "Spring 2023"

weave_options:
  echo: false
  term: false
  number_sections: FALSE
---

```julia; echo = false
import Pkg;
Pkg.activate(dirname(@__DIR__));

using Dates;
using DataFrames;
using PrettyTables;

semester_d1 = "2023-01-23";
semester_end = "2023-05-09";
holiday_dates = ["2023-02-27", "2023-04-03", "2023-04-05"];
holidays = DataFrame(Date=Dates.format.(Date.(holiday_dates), "mm-dd"), 
                    Holiday=["February Break", "Spring Break", "Spring Break"]);
```

## Course Information

- **Instructor**: Prof. Vivek Srikrishnan ([viveks@cornell.edu](mailto:viveks@cornell.edu))
- **Time**: MW 1:00-2:15pm
- **Location**: 225 Riley-Robb
- **Office Hours**: By appointment in 318 Riley-Robb or Zoom
- **Website**: <https://viveks.me/climate-risk-analysis>
- **TA**: Chloe Darnell ([ced227@cornell.edu](mailto:ced227@cornell.edu)); **Office Hours**: by appointment
- **Credits**: 3

## Course Description

The impacts of climate variability and change are subject to a number of deep and dynamic uncertainties which complicate systems design and management. Using coastal flood risk management as motivation, this course will introduce concepts and methods for uncertainty characterization and quantification for systems experiencing dynamic environmental risk and will explore implications of uncertainty for decision-making. Students will develop and apply these uncertainty and decision analyses in the context of several example systems. 

## Prerequisites

BEE 4750, CEE 3040 or ENGRD 2700, MATH 1920, or permission of instructor. 

In other terms, students should be familiar with:
- Systems thinking and analysis;
- Introductory probability and statistics;
- Calculus;
- Basic programming concepts.

## Learning Outcomes

After completing this course, students will:
- Identify pathways through which climate variability and change poses risks;
- Assess system and model responses to varying factors with sensitivity analysis and exploratory modeling;
- Quantify uncertainties when appropriate using methods from frequentist and Bayesian statistics;
- Analyze the influence of uncertainty on risk management and decision-making.

## Class Philosophy and Expectations

The goal of our course is to help you gain competency and knowledge in the area of climate risk analysis. This involves a dual responsibility on the part of the instructor and the student. As the instructor, my responsibility is to provide you with a structure and opportunity to learn. To this end, I will commit to:
- provide organized and focused lectures, in-class activities, and assignments;
- encourage students to regularly evaluate and provide feedback on the course;
- manage the classroom atmosphere to promote learning;
- schedule sufficient out-of-class contact opportunities, such as office hours;
- allow adequate time for assignment completion;
- make lecture materials, class policies, activities, and assignments accessible to students. 
Students are encouraged to discuss any concerns with me during office hours or through a course communications channel.

Students can optimize their performance in the course by attending all lectures and labs, doing any required reading before class, actively participating in online and in-class discussions, beginning assignments early, and attending office hours. 

## Class Format

Classes will meet twice a week for 75 minutes. The first meeting each week will typically be a lecture format introducing and highlighting key concepts, and the second will typically be split across computational exercises (as appropriate) and discussion. Some deviations from this may occur based on the content in a particular week and/or holidays.

## Required Texts

There is no required textbook for this class. Readings (typically journal articles or book sections relevant to the material for a class meeting) will be provided during the course through the Cornell library.

## Course Technology

### Julia

We will use the Julia programming language in this course. Julia is a modern language designed for scientific programming and has extensive functionality relevant to this course. No prior knowledge of Julia is required for this course. If you have experience with a modern language (Python, MATLAB, R, etc), many features of Julia will be familiar.

### GitHub

Homework assignments will be managed using GitHub Classroom, and students are encouraged to use GitHub to manage their project codes. GitHub Classroom facilitates the creation of individual code repositories for each student for each assignment. The use of version control frameworks (such as git) and remote repositories (such as GitHub) are part of a set of best practices for managing software relevant for research, but no prior experience with git or GitHub is required.

### Canvas

Canvas will be used as a central hub, with links to the course website, readings, the discussion board, and Gradescope, as well as the gradebook itself. Annotation assignments will also be housed and completed in Canvas. However, Canvas **will not** be used for class announcements: those will be made in class and on Ed Discussion.

### Gradescope

All assessment materials aside from annotations will be submitted as PDFs using Gradescope.

### Ed Discussion

Online communication will be conducted using an Ed Discussion message board. Important class announcements will be made in Ed Discussion; those particularly important will also be sent through email.

## Assessments

Students will be assessed using a combination of written responses to readings, problem sets, participation, and a term project. All assessment materials should be submitted as PDFs using Gradescope. 

### Reading Annotations and Responses (20%)

Students will annotate and write responses to key readings each week. Annotations will be made using the Hypothesis social annotation tool within Canvas and should be done prior to the Wednesday class meeting of the relevant week. Annotations are submitted automatically; just making them is sufficient.

Responses will involve summarizing the reading and presenting critiques of the frameworks, approaches, and/or conclusions, synthesizing the broader module content as appropriate. Each response should be no more than 1 page and should be submitted as a PDF on Gradescope before the next Monday's class meeting. Both responses and annotations will be graded on the basis of completion (the annotations should show engagement with the text). Two response grades will be dropped. Annotations and responses will be weighted equally in the final component grade.

### Lab Notebooks (25%)

Jupyter notebooks will be used in lab sessions (typically Wednesdays) to guide students through the implementation and use of methods discussed in class. These notebooks will be made available prior to the lab session through GitHub, and the relevant repositories will be linked on the class schedule. Time outside of class may be required to complete lab assignments, and collaboration is encouraged. PDFs of notebooks should be submitted to Gradescope prior to next Monday's meeting. 10% will be deducted per day for later submissions. The lowest lab grade will be dropped.

### Homework Assignments (30%)

Homework assignments will be given as appropriate throughout the course (roughly 2-3 weeks). These will involve implementing methods and/or analyzing problems relevant to the current module. 10% will be deducted per day for late submissions. Collaboration on assignments is encouraged, but students should reference and give credit to consulted resources, including classmates.

Homeworks will be assigned using GitHub Classroom. They will be provided as Jupyter Notebooks, and should be exported as PDFs before submitting to Gradescope. Rubrics will be provided for each assignment. 

### Term Project (25%)

Students will work in groups of 2 to complete a final term project, which will focus on a climate risk management problem of their choice. This project will involve identifying a problem of interest and analyzing it using the methods from this class as a starting point. Groups will submit a one-page proposal (not including references), a draft of the work plan, and a final poster, which can be accompanied by a supplemental PDF. These materials should be submitted through Gradescope.

## Diversity and Inclusion

Our goal in this class is to foster an inclusive learning environment and make everyone feel comfortable in the classroom, regardless of social identity, background, and specific learning needs. As engineers, our work touches on many critical aspects of society, and questions of inclusion and social justice cannot be separated from considerations of systems analysis, objective selection, risk analysis, and trade-offs. 

In all communications and interactions with each other, members of this class community (students and instructors) are expected to be respectful and inclusive. In this spirit, we ask all participants to:
- share their experiences, values, and beliefs;
- be open to and respectful of the views of others; and
- value each other's opinions and communicate in a respectful manner.

We all make mistakes in our communications with one another, both when speaking and listening. Be mindful of how spoken or written language might be misunderstood, and be aware that, for a variety of reasons, how others perceive your words and actions may not be exactly how you intended them. At the same time, it is also essential that we be respectful and interpret each other's comments and actions in good faith. 

Please let me know if you feel any aspect(s) of class could be made more inclusive. Please also share any preferred name(s) and/or your pronouns with me if you wish: I use he/him/his, and you can refer to me either as Vivek or Prof. Srikrishnan.

## Academic Integrity

### Collaboration Guidelines

This class is designed to encourage collaboration, and students are encouraged to discuss their work with other students. However, I expect students to abide by the [Cornell University Code of Academic Integrity](http://theuniversityfaculty.cornell.edu/academic-integrity/) in all aspects of this class. All work submitted must represent the students’ own work and understanding, whether individually or as a group (depending on the particulars of the assignment). This includes analyses, code, software runs, and reports. Engineering as a profession relies upon the honesty and integrity of its practitioners (see *e.g.* the [American Society for Civil Engineers’ Code of Ethics](https://www.asce.org/-/media/asce-images-and-files/career-and-growth/ethics/documents/asce-code-ethics.pdf).

### Plagiarism

The collaborative environment in this class should not be viewed as an invitation for plagiarism. Plagiarism occurs when a writer intentionally misrepresents another’s words or ideas (including code!) as their own without acknowledging the source. All external resources which are consulted while working on an assignment should be referenced, including other students and faculty with whom the assignment is discussed. Plagiarism will result in a zero for that assignment as well as the potential for your case to be passed on for additional disciplinary action.

### AI-Based Resources and Assistance

As noted, all work submitted for a grade in this course must reflect your own understanding. The use and consulation of AI tools, such as ChatGPT or similar, must be pre-approved and clearly referenced. If approved, you must: 
- reference the URL of the service you are using including the specific date you accessed it; 
- provide the *exact* query used to interact with the tool; and
- report the *exact* response received. 
Failure to attain prior approval or fully reference the interaction, as described above, will be treated as plagiarism and referred to the University accordingly.

## Attendance

Attendance is not *required*, but in general, students who attend class regularly will do better and get more out of the class than students who do not. Your class participation grade will reflect both the quantity and quality of your participation, only some of which can occur asynchronously. I will put as many course materials, such as lecture notes and announcements, as possible online, but viewing materials online is not the same as active participation and engagement.

Life happens, of course, and this may lead you to miss class. Let me know if you need any appropriate arrangements ahead of time. For example, please stay home if you're feeling sick! This is beneficial for both your own recovery and the health and safety of your classmates. We will also make any necessary arrangements if whatever is going on will negatively impact your grade, for example by causing you to be unable to submit an assignment on time.

## Accomodations

Let me know if you have any access barriers in this course, whether they relate to course materials, assignments, or communications. If any special accommodations would help you navigate any barriers and improve your chances of success, please exercise your right to those accommodations and reach out to me as early as possible with your Student Disability Services <https://sds.cornell.edu/> (SDS) accommodation letter. This will ensure that we have enough time to make appropriate arrangements.

If you need more immediate accommodations, but do not yet have a letter, please let me know and then follow up with SDS.

## Mental Health resources

We all have to take care of our mental health, just as we would our physical health. As a student, you may experience a range of issues which can negatively impact your mental health. Please do not ignore any of these stressors, or feel like you have to navigate these challenges alone! You are part of a community of students, faculty, and staff, who have a responsibility to look for one another's well-being. If you are struggling with managing your mental health, or if you believe a classmate may be struggling, please reach out to the course instructor, the TA, or, for broader support, please take advantage of Cornell's mental health resources <https://mentalhealth.cornell.edu/>.

I am not a trained counselor, but I am here to support you in whatever capacity we can. You should never feel that you need to push yourself past your limits to complete any assignment for this class or any other. If we need to make modifications to the course or assignment schedule, you can certainly reach out to me, and all relevant discussions will be kept strictly confidential.

## COVID-19 arrangements

The particulars of how COVID-19 will affect class are fluid, depending on Cornell policies and the state of any acute outbreaks. Let me know if you will miss class due to quarantine (either official or self-imposed), and we will make arrangements for streaming and recording class, as well as any required virtual office hours or missed assignments. If class is shifted online for any reason, we will make appropriate arrangements and keep students informed. If we are not allowed to have in-person meetings, all office hours will be moved online.

In general, please err on the side of not attending class if you suspect that you might be ill, with COVID-19 or anything else. Class is not worth risking your health or that of your classmates.

## Tentative Lesson Plan

This lesson plan is provided only as a rough overview of covered topics and is subject (even likely) to change; see the schedule on the course website for more details and up-to-date information.

```julia; echo=false; results="raw"

# set vector of class dates (including holidays)
cdates = filter(d -> Dates.dayname(d) ∈ ["Monday", "Wednesday"], Date(semester_d1):Day(1):Date(semester_end));
cdates = cdates[findall(d -> d ∉ Date.(holiday_dates), cdates)]
# find weeks from first week of classes
cweeks = week.(cdates) .- (week(Date(semester_d1)) - 1)
numweeks = length(unique(cweeks))
get_days(n) = Dates.format.(cdates[cweeks .== n], "u dd")

# set vector of class topics
topics = ["Class Overview",
          "Intro to Climate Risk",
          "Motivating Problem: Coastal Flood Risk",
          "Climate System Uncertainty, Correlations, and Risk",
          "Scenarios and Decision Making Under Uncertainty",
          "Overview of Uncertainty Quantification",
          "Frequentist Uncertainty Quantification: The Bootstrap",
          "Bayesian Computation and the Role of Priors",
          "Markov Chain Monte Carlo",
          "Model Calibration and Discrepancies",
          "Extreme Events and Extreme Value Distributions",
          "Hypothesis Testing and Model Selection",
          "Verification, Validation, and Extrapolation",
          "Time Preferences and Discounting",
          "Final Project Posters"
          ]

readings = [nothing,
            "Keller et al. (2021), \"Climate risk management\"",
            "Oddo et al. (2020), \"Deep uncertainties in Sea‐Level rise and storm surge projections: implications for coastal flood risk management\"",
            "Urban & Keller (2009), \"Complementary observational constraints on climate sensitivity.\"",
            "Morgan & Keith (2008), \"Improving the way we think about projecting future energy use and emissions of carbon dioxide\"",
            "Efron & Tibshirani (1986), \"Bootstrap methods for standard errors, confidence intervals, and other measures of statistical accuracy\"",
            nothing,
            "Gelman et al. (2017), \"The Prior Can Often Only Be Understood in the Context of the Likelihood\"",
            "Chapter 11 of Gelman et al. (2013), \"Bayesian Data Analysis.\"",
            "Ruckert et al. (2017), \"The effects of time-varying observation errors on semi-empirical sea-level projections\"",
            "Ghil et al. (2011), \"Extreme events: dynamics, statistics and prediction\"",
            "Wong et al. (2018), \"Neglecting model structural uncertainty underestimates upper tails of flood hazard\"",
            "Oreskes et al (1994), \"Verification, validation, and confirmation of numerical models in the earth sciences\"",
            "Weitzman, M. L. (1998). \"Why the far-distant future should be discounted at its lowest possible rate\"",
            nothing
            ]

# add in holidays
ctopics = Vector{String}(undef, length(cweeks)); # initialize array
cdays = join.(get_days.(unique(cweeks)), ", ")
cschedule = DataFrame(Dates=cdays, Topic=topics)

# highlight holidays
#pretty_table(cschedule; nosubheader=true, backend=Val(:latex), tf=tf_latex_modern, formatters=ft_nomissing, row_names=1:numweeks, row_name_alignment=:r, row_name_column_title = "Week", alignment=:l)
pretty_table(cschedule; nosubheader=true, backend=Val(:html), tf=tf_html_minimalist, formatters=ft_nomissing, row_names=1:numweeks, row_name_alignment=:r, row_name_column_title = "Week", alignment=:l)
```